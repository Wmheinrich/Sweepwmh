/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

            combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };

                    combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };

                           combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };


           combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };



    };

        keymap {
                compatible = "zmk,keymap";

       		default_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T 						&kp Y &kp U  &kp I    &kp O   &kp P 
		&kp A &kp S &kp D &kp F &kp G 			        	        &kp H &kp J &kp K &kp L &kp QUOT
		&mt LCTL Z &kp X &kp C &kp V &kp B				        &kp N &kp M  &kp CMMA &kp DOT &mt APOS RET
          				&mo 1 &kp BSPC  				&kp SPC &mo 2 
		>;
		};

       		left_layer {
		bindings = <
		&kp ESC  &kp FSLH    &kp STAR    &kp MINUS    &kp PLUS		&kp LNLCK &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp DEL 
		&kp LALT    &kp LGUI    &kp UP      &kp LPAR     &kp RPAR 		&kp DOT &kp KP_N4  &kp KP_N5 &kp KP_N6  &kp EQUAL 
		&kp LCRTL    &kp LEFT 	&kp DOWN &kp RIGHT  &kp DEL     	&kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N3  &kp RET 
					    &TRANS  &TRANS  					&TRANS &TRANS 
		>;
		};

		right_layer {
		bindings = <
		&kp EXCL  &kp AT    &kp HASH    &kp DLLR    &kp PRCNT 			&kp CARET &KP AMPS   &kp STAR   &kp LPAR  &kp RPAR
		&kp K_PP &kp K_PREV &kp K_VOL_DOWN &kp K_VOL_UP &kp K_NEXT  		&kp PG_UP &kp HOME  &kp UP &kp END &kp SEMI 
		&kp LCRTL  &kp LGUI &kp LALT &kp DEL &kp ESC  				&kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT &kp CAPS   
					 &trans &trans  					&trans &trans 
		>;
		};	

		tri_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 			&trans &trans   &trans   &trans  &trans
		&kp F1 &kp F2 &kp F3 &kp F4 &kp F5  						&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		&bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   				&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
					 &trans &trans  					&trans &trans 
		>;
		};	

	};
};
